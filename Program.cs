using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        List<string> tasks = new List<string>();
        bool running = true;

        while (running)
        {
            Console.WriteLine("\n--- ToDo App ---");
            Console.WriteLine("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É");
            Console.WriteLine("2. –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏");
            Console.WriteLine("3. –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É");
            Console.WriteLine("4. –í—ã–π—Ç–∏");
            Console.Write("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ: ");

            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    Console.Write("–í–≤–µ–¥–∏ –∑–∞–¥–∞—á—É: ");
                    string task = Console.ReadLine();
                    tasks.Add(task);
                    Console.WriteLine("–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
                    break;

                case "2":
                    Console.WriteLine("\n–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:");
                    if (tasks.Count == 0) Console.WriteLine("–ù–µ—Ç –∑–∞–¥–∞—á");
                    else
                    {
                        for (int i = 0; i < tasks.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {tasks[i]}");
                        }
                    }
                    break;

                case "3":
                    Console.Write("–ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ");
                    if (int.TryParse(Console.ReadLine(), out int num) && num > 0 && num <= tasks.Count)
                    {
                        tasks.RemoveAt(num - 1);
                        Console.WriteLine("üóë –ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞!");
                    }
                    else Console.WriteLine("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä");
                    break;

                case "4":
                    running = false;
                    Console.WriteLine("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
                    break;

                default:
                    Console.WriteLine("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä");
                    break;
            }
        }
    }
}
